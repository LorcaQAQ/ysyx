package instructions

import chisel3._
import chisel3.util._
object RV32I {
  //add and sub
  val ADDI    = BitPat("b?????????????????000?????0010011")
  val SUB     = BitPat("b0100000??????????000?????0110011")
  val ADD     = BitPat("b0000000??????????000?????0110011")
  //load immediate
  val AUIPC   = BitPat("b?????????????????????????0010111")
  val LUI     = BitPat("b?????????????????????????0110111")
  //jump
  val JAL     = BitPat("b?????????????????????????1101111")
  val JALR    = BitPat("b?????????????????000?????1100111")
  //load and store
  val LW     = BitPat("b?????????????????010?????0000011")
  val SW     = BitPat("b?????????????????010?????0100011")
  //set less than
  val SLTIU  = BitPat("b?????????????????011?????0010011")
  //branch
  val BEQ    = BitPat("b?????????????????000?????1100011")
  val BNE    = BitPat("b?????????????????001?????1100011")

}
